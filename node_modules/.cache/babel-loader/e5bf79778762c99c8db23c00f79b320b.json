{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitch\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\ActiveSession.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration/index\";\n\nfunction ActiveSession({\n  session,\n  focusDuration,\n  breakDuration\n}) {\n  if (session === null) {\n    return null;\n  }\n\n  const currentTimer = session.label === \"Focusing\" ? focusDuration : breakDuration;\n  const percent = (currentTimer * 60 - (session === null || session === void 0 ? void 0 : session.timeRemaining)) / (currentTimer * 60) * 100;\n\n  function nullSession() {\n    if ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\") {\n      return `Focusing for ${minutesToDuration(focusDuration)} minutes`;\n    } else {\n      return `On Break for ${minutesToDuration(breakDuration)} minutes`;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, nullSession()), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": percent // Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `${percent}%`\n    } //Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default ActiveSession;","map":{"version":3,"sources":["C:/Users/mitch/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ActiveSession.js"],"names":["React","secondsToDuration","minutesToDuration","ActiveSession","session","focusDuration","breakDuration","currentTimer","label","percent","timeRemaining","nullSession","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,yBAArD;;AAEA,SAASC,aAAT,CAAuB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,aAAX;AAA0BC,EAAAA;AAA1B,CAAvB,EAAkE;AAChE,MAAIF,OAAO,KAAK,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,QAAMG,YAAY,GAChBH,OAAO,CAACI,KAAR,KAAkB,UAAlB,GAA+BH,aAA/B,GAA+CC,aADjD;AAEA,QAAMG,OAAO,GACV,CAACF,YAAY,GAAG,EAAf,IAAoBH,OAApB,aAAoBA,OAApB,uBAAoBA,OAAO,CAAEM,aAA7B,CAAD,KAAgDH,YAAY,GAAG,EAA/D,CAAD,GAAuE,GADzE;;AAGA,WAASI,WAAT,GAAuB;AACrB,QAAI,CAAAP,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEI,KAAT,MAAmB,UAAvB,EAAmC;AACjC,aAAQ,gBAAeN,iBAAiB,CAACG,aAAD,CAAgB,UAAxD;AACD,KAFD,MAEO;AACL,aAAQ,gBAAeH,iBAAiB,CAACI,aAAD,CAAgB,UAAxD;AACD;AACF;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCK,WAAW,EAA5C,CAFF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,iBAAiB,CAACG,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEM,aAAV,CADpB,eAJF,CADF,CAFF,eAYE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAeH,OALjB,CAK0B;AAL1B;AAME,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAG,GAAEJ,OAAQ;AAApB,KANT,CAMmC;AANnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAZF,CADF;AA6BD;;AAED,eAAeN,aAAf","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration, minutesToDuration } from \"../utils/duration/index\";\r\n\r\nfunction ActiveSession({ session, focusDuration, breakDuration }) {\r\n  if (session === null) {\r\n    return null;\r\n  }\r\n\r\n  const currentTimer =\r\n    session.label === \"Focusing\" ? focusDuration : breakDuration;\r\n  const percent =\r\n    ((currentTimer * 60 - session?.timeRemaining) / (currentTimer * 60)) * 100;\r\n\r\n  function nullSession() {\r\n    if (session?.label === \"Focusing\") {\r\n      return `Focusing for ${minutesToDuration(focusDuration)} minutes`;\r\n    } else {\r\n      return `On Break for ${minutesToDuration(breakDuration)} minutes`;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/*this area should only show when there is an active focus or break*/}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/*update message below to include current session, focus or on break, total duration */}\r\n          <h2 data-testid=\"session-title\">{nullSession()}</h2>\r\n          {/*update message below correctly to format the time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {secondsToDuration(session?.timeRemaining)} remaining\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"progress\" style={{ height: \"20px\" }}>\r\n            <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              aria-valuenow={percent} // Increase aria-valuenow as elapsed time increases\r\n              style={{ width: `${percent}%` }} //Increase width % as elapsed time increases\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActiveSession\r\n"]},"metadata":{},"sourceType":"module"}